{"version":3,"sources":["components/Statistics/Statistics.module.css","components/Section/Section.jsx","components/Statistics/Statistics.jsx","components/FeedbackOptions/FeedbackOptions.jsx","components/Notification/Notification.jsx","components/LegendStatistics/LegendStatistics.jsx","App.jsx","index.js","components/Section/Section.module.css","components/FeedbackOptions/FeedbackOptions.module.css"],"names":["module","exports","Section","title","children","className","css","section","protoType","PropTypes","string","isRequired","elementType","Statistics","good","neutral","bad","total","positivePercentage","container_statistics","statistics_item","statiscic_votes","FeedbackOptions","options","onLeaveFeedback","container_options","map","name","type","onClick","toUpperCase","slice","Notification","message","LegendStatistics","App","state","props","initVote","vote","data","rangVote","target","setState","prevState","countTotalFeedback","Object","values","reduce","a","b","countPositiveFeedbackPercentage","toFixed","this","Component","defaultProps","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4596ebbd.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container_statistics\":\"Statistics_container_statistics__arym9\",\"statistics_item\":\"Statistics_statistics_item__1xFaP\",\"statiscic_votes\":\"Statistics_statiscic_votes__1xsAD\"};","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport css from \"./Section.module.css\";\n\nconst Section = ({ title, children }) => (\n  <section className={css.section}>\n    <h1 className={css.title}>{title}</h1>\n    {children}\n  </section>\n);\n\nSection.protoType = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.elementType.isRequired,\n};\n\nexport default Section;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport css from \"./Statistics.module.css\";\n\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => (\n  <ul className={css.container_statistics}>\n    <li className={css.statistics_item}>\n      Good:\n      <span className={css.statiscic_votes}> {good}</span>\n    </li>\n    <li className={css.statistics_item}>\n      Neutral:\n      <span className={css.statiscic_votes}> {neutral}</span>\n    </li>\n    <li className={css.statistics_item}>\n      Bad:\n      <span className={css.statiscic_votes}> {bad}</span>\n    </li>\n    <li className={css.statistics_item}>\n      Total:\n      <span className={css.statiscic_votes}> {total}</span>\n    </li>\n    <li className={css.statistics_item}>\n      Positive feedback:\n      <span className={css.statiscic_votes}> {positivePercentage}%</span>\n    </li>\n  </ul>\n);\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number,\n  positivePercentage: PropTypes.string,\n};\n\nexport default Statistics;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport css from \"./FeedbackOptions.module.css\";\n\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => (\n  <div className={css.container_options}>\n    {options.map((name) => (\n      <button type=\"button\" key={name} name={name} onClick={onLeaveFeedback}>\n        {name && name[0].toUpperCase() + name.slice(1)}\n      </button>\n    ))}\n  </div>\n);\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.arrayOf(PropTypes.string).isRequired,\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\n\nexport default FeedbackOptions;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Notification = ({ message }) => <p>{message}</p>;\n\nNotification.propTypes = {\n  title: PropTypes.string,\n};\n\nexport default Notification;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport css from \"./LegendStatistics.module.css\";\n\nconst LegendStatistics = ({ title, children }) => (\n  <fieldset>\n    <legend className={css.title}>{title}</legend>\n    {children}\n  </fieldset>\n);\n\nLegendStatistics.protoType = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.elementType.isRequired,\n};\n\nexport default LegendStatistics;\n","import React, { Component } from \"react\";\n\nimport Section from \"./components/Section/Section\";\nimport Statistics from \"./components/Statistics/Statistics\";\nimport FeedbackOptions from \"./components/FeedbackOptions/FeedbackOptions\";\nimport Notification from \"./components/Notification/Notification\";\nimport LegendStatistics from \"./components/LegendStatistics/LegendStatistics\";\n\nexport class App extends Component {\n  static defaultProps = {\n    initVote: 0,\n  };\n\n  state = {\n    good: this.props.initVote,\n    neutral: this.props.initVote,\n    bad: this.props.initVote,\n  };\n\n  vote = (data) => {\n    const rangVote = data.target.name;\n    this.setState((prevState) => {\n      prevState[rangVote] = prevState[rangVote] + 1;\n      this.countTotalFeedback();\n      return { ...prevState };\n    });\n  };\n\n  countTotalFeedback = () => {\n    return Object.values(this.state).reduce((a, b) => a + b, 0);\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    return this.state.good\n      ? ((this.state.good * 100) / this.countTotalFeedback()).toFixed(0)\n      : 0;\n  };\n\n  render() {\n    return (\n      <Section title=\"Please leave feedback\">\n        <FeedbackOptions\n          options={[\"good\", \"neutral\", \"bad\"]}\n          onLeaveFeedback={this.vote}\n        />\n        <LegendStatistics title=\"Statistics\">\n          {this.countTotalFeedback() ? (\n            <Statistics\n              good={this.state.good}\n              neutral={this.state.neutral}\n              bad={this.state.bad}\n              total={this.countTotalFeedback()}\n              positivePercentage={this.countPositiveFeedbackPercentage()}\n            />\n          ) : (\n            <Notification message=\"No feedback given\" />\n          )}\n        </LegendStatistics>\n      </Section>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { App } from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__32GDO\",\"title\":\"Section_title__3bWUu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container_options\":\"FeedbackOptions_container_options__2V7hG\"};"],"sourceRoot":""}